name: AVMUpgrades - Updates to Main Branch

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Run weekly on Monday at 00:00 UTC

permissions:
  contents: write

jobs:
  update-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - name: Check tests folder and update dependabot.yml
        run: |
          if [ ! -d "tests" ] || [ -z "$(ls -A tests)" ]; then
            echo "Tests folder is empty or doesn't exist. Updating dependabot.yml..."
            yq eval 'del(.updates[] | select(.directory == "/tests" and .package-ecosystem == "gomod"))' dependabot.yml > dependabot_updated.yml
            if ! cmp -s dependabot.yml dependabot_updated.yml; then
              mv dependabot_updated.yml dependabot.yml
              echo "CHANGES_MADE=true" >> $GITHUB_ENV
            else
              echo "No changes needed in dependabot.yml"
            fi
          else
            echo "Tests folder exists and is not empty. No changes needed."
          fi

      - name: Find examples directories
        id: find_dirs
        run: |
          DIRS=$(find ./examples -type d -mindepth 1 -maxdepth 1 | jq -R -s -c 'split("\n")[:-1]')
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT

      - name: Update dependabot.yml with example directories
        run: |
          DIRS='${{ steps.find_dirs.outputs.dirs }}'
          echo "Directories found: $DIRS"
          echo $DIRS | jq -r '.[]' | while read -r dir; do
            echo "Processing directory: $dir"
            yq e -i '.updates += {"package-ecosystem": "terraform", "directory": "'"$dir"'", "schedule": {"interval": "daily"}, "target-branch": "avmupgrades", "allow": [{"dependency-type": "all"}]}' .github/dependabot.yml
            echo "Current state of .github/dependabot.yml:"
            cat .github/dependabot.yml
          done

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .github/dependabot.yml
          git commit -m "[AVMUpgrades] Update dependabot.yml" || echo "No changes to commit"
          git push origin main