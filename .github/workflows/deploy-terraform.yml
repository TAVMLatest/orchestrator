name: Deploy Terraform Configuration

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-terraform.yml'
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-terraform.yml'
      - 'terraform/**'

env:
  TF_WORKING_DIR: "./terraform"
  TF_VERSION: "1.10.0"
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_TENANT_ID: "68ca7b3e-6aaf-4d07-8ce2-b70f507d8eb7"
  ARM_CLIENT_ID: "b86f6468-80d2-44cd-b6a9-7f9f60a91b17"
  ARM_SUBSCRIPTION_ID: "cc9a7c7a-00ae-4415-a75e-469866fc919e"

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=rg-gitopsiq-terraform-state" \
            -backend-config="storage_account_name=sagitopsiqtfstate" \
            -backend-config="container_name=tavmlatest" \
            -backend-config="key=github-app-manager.tfstate" \
            -backend-config="use_azuread_auth=true"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: false # github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan