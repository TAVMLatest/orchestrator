name: Deploy Terraform Configuration

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-terraform.yml'
      - 'terraform/**'
      - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-terraform.yml'
      - 'terraform/**'
      - 'scripts/**'

env:
  TF_WORKING_DIR: "./terraform"
  TF_VERSION: "1.10.0"
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_TENANT_ID: "68ca7b3e-6aaf-4d07-8ce2-b70f507d8eb7"
  ARM_CLIENT_ID: "b86f6468-80d2-44cd-b6a9-7f9f60a91b17"
  ARM_SUBSCRIPTION_ID: "cc9a7c7a-00ae-4415-a75e-469866fc919e"
  GITHUB_APP_ID: ${{ vars.AVMUPGRADES_APP_ID }}
  GITHUB_APP_PEM_FILE: ${{ secrets.AVMUPGRADES_PRIVATE_KEY }}
  GITHUB_APP_INSTALLATION_ID: ${{ vars.AVMUPGRADES_INSTALLATION_ID }}
  TF_VAR_organization: ${{ github.repository_owner }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Generate GitHub App JWT
        run: |
          pip install pyjwt
          JWT_TOKEN=$(python scripts/generate_github_app_jwt.py)
          echo "TF_VAR_github_app_jwt_token=$JWT_TOKEN" >> $GITHUB_ENV

      - name: Run populate_repos_json.sh
        run: ./scripts/populate_repos_json.sh
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Azure Login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan